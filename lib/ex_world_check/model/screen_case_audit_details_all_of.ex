# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ExWorldCheck.Model.ScreenCaseAuditDetailsAllOf do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :userId,
    :caseSystemId,
    :statusCode,
    :screeningState,
    :startScreeningDate,
    :noOfNewResults,
    :noOfReviewRequiredResults,
    :noOfExcludedResults,
    :noOfAutoResolvedResults,
    :providerTypes
  ]

  @type t :: %__MODULE__{
          :userId => String.t(),
          :caseSystemId => String.t(),
          :statusCode => String.t(),
          :screeningState => String.t(),
          :startScreeningDate => DateTime.t(),
          :noOfNewResults => integer(),
          :noOfReviewRequiredResults => integer(),
          :noOfExcludedResults => integer(),
          :noOfAutoResolvedResults => integer(),
          :providerTypes => [ExWorldCheck.Model.ProviderType.t()]
        }
end

defimpl Poison.Decoder, for: ExWorldCheck.Model.ScreenCaseAuditDetailsAllOf do
  import ExWorldCheck.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:providerTypes, :list, ExWorldCheck.Model.ProviderType, options)
  end
end
