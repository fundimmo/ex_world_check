# NOTE: This file is auto generated by OpenAPI Generator 7.13.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ExWorldCheck.Model.MediaCheckArticleSummary do
  @moduledoc """
  MediaCheck news article summary 
  """

  @derive JSON.Encoder
  defstruct [
    :articleId,
    :articleFound,
    :author,
    :contentType,
    :countries,
    :duplicatesKey,
    :language,
    :publicationDate,
    :snippet,
    :publication,
    :title,
    :topics,
    :wordCount,
    :phases
  ]

  @type t :: %__MODULE__{
          :articleId => String.t() | nil,
          :articleFound => boolean() | nil,
          :author => String.t() | nil,
          :contentType => String.t() | nil,
          :countries => [String.t()] | nil,
          :duplicatesKey => String.t() | nil,
          :language => String.t() | nil,
          :publicationDate => DateTime.t() | nil,
          :snippet => String.t() | nil,
          :publication => ExWorldCheck.Model.MediaCheckPublicationDetails.t() | nil,
          :title => String.t() | nil,
          :topics => [String.t()] | nil,
          :wordCount => integer() | nil,
          :phases => [String.t()] | nil
        }

  alias ExWorldCheck.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(
      :publication,
      :struct,
      ExWorldCheck.Model.MediaCheckPublicationDetails
    )
  end
end
