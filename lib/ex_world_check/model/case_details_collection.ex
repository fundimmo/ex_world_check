# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ExWorldCheck.Model.CaseDetailsCollection do
  @moduledoc """
  Container of cases, that is used in scope of creation operation.
  """

  @derive [Poison.Encoder]
  defstruct [
    :groupId,
    :providerTypes,
    :nameTransposition,
    :caseScreeningState,
    :cases
  ]

  @type t :: %__MODULE__{
          :groupId => String.t(),
          :providerTypes => [ExWorldCheck.Model.ProviderType.t()],
          :nameTransposition => boolean() | nil,
          :caseScreeningState => %{optional(String.t()) => String.t()} | nil,
          :cases => [ExWorldCheck.Model.CaseDetails.t()]
        }
end

defimpl Poison.Decoder, for: ExWorldCheck.Model.CaseDetailsCollection do
  import ExWorldCheck.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:providerTypes, :list, ExWorldCheck.Model.ProviderType, options)
    |> deserialize(:cases, :list, ExWorldCheck.Model.CaseDetails, options)
  end
end
