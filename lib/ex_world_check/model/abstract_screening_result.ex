# NOTE: This file is auto generated by OpenAPI Generator 7.13.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ExWorldCheck.Model.AbstractScreeningResult do
  @moduledoc """
  Generic common Result fields returned after a Case is screened
  """

  @derive JSON.Encoder
  defstruct [
    :resultId,
    :referenceId,
    :matchStrength,
    :matchScore,
    :matchedTerm,
    :matchedTerms,
    :submittedTerm,
    :matchedNameType,
    :secondaryFieldResults,
    :sources,
    :categories,
    :creationDate,
    :modificationDate,
    :lastAlertDate,
    :modifier,
    :resolution,
    :resultReview
  ]

  @type t :: %__MODULE__{
          :resultId => String.t() | nil,
          :referenceId => String.t(),
          :matchStrength => String.t() | nil,
          :matchScore => float() | nil,
          :matchedTerm => String.t() | nil,
          :matchedTerms => [ExWorldCheck.Model.MatchedTerm.t()] | nil,
          :submittedTerm => String.t() | nil,
          :matchedNameType => String.t() | nil,
          :secondaryFieldResults => [ExWorldCheck.Model.SecondaryFieldResult.t()] | nil,
          :sources => [String.t()] | nil,
          :categories => [String.t()] | nil,
          :creationDate => DateTime.t() | nil,
          :modificationDate => DateTime.t() | nil,
          :lastAlertDate => DateTime.t() | nil,
          :modifier => ExWorldCheck.Model.UserSummary.t() | nil,
          :resolution => ExWorldCheck.Model.Resolution.t() | nil,
          :resultReview => ExWorldCheck.Model.Review.t() | nil
        }

  alias ExWorldCheck.Deserializer

  def decode(value) do
    value
    |> Deserializer.deserialize(:matchedTerms, :list, ExWorldCheck.Model.MatchedTerm)
    |> Deserializer.deserialize(
      :secondaryFieldResults,
      :list,
      ExWorldCheck.Model.SecondaryFieldResult
    )
    |> Deserializer.deserialize(:modifier, :struct, ExWorldCheck.Model.UserSummary)
    |> Deserializer.deserialize(:resolution, :struct, ExWorldCheck.Model.Resolution)
    |> Deserializer.deserialize(:resultReview, :struct, ExWorldCheck.Model.Review)
  end
end
