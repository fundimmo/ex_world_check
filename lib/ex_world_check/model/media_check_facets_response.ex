# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ExWorldCheck.Model.MediaCheckFacetsResponse do
  @moduledoc """
  Facets for article navigation. Use facet's `drilldownKey` to select a facet
  """

  @derive [Poison.Encoder]
  defstruct [
    :publicationTypes,
    :geographies,
    :topics,
    :topicPhases,
    :countries,
    :publicationDates
  ]

  @type t :: %__MODULE__{
          :publicationTypes => [ExWorldCheck.Model.MediaCheckRegularFacetResponse.t()] | nil,
          :geographies => [[ExWorldCheck.Model.MediaCheckRegularFacetResponse.t()]] | nil,
          :topics => [ExWorldCheck.Model.MediaCheckRegularFacetResponse.t()] | nil,
          :topicPhases => [ExWorldCheck.Model.MediaCheckRegularFacetResponse.t()] | nil,
          :countries => [ExWorldCheck.Model.MediaCheckRegularFacetResponse.t()] | nil,
          :publicationDates =>
            [ExWorldCheck.Model.MediaCheckPublicationDatesFacetResponse.t()] | nil
        }
end

defimpl Poison.Decoder, for: ExWorldCheck.Model.MediaCheckFacetsResponse do
  import ExWorldCheck.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :publicationTypes,
      :list,
      ExWorldCheck.Model.MediaCheckRegularFacetResponse,
      options
    )
    |> deserialize(:topics, :list, ExWorldCheck.Model.MediaCheckRegularFacetResponse, options)
    |> deserialize(
      :topicPhases,
      :list,
      ExWorldCheck.Model.MediaCheckRegularFacetResponse,
      options
    )
    |> deserialize(:countries, :list, ExWorldCheck.Model.MediaCheckRegularFacetResponse, options)
    |> deserialize(
      :publicationDates,
      :list,
      ExWorldCheck.Model.MediaCheckPublicationDatesFacetResponse,
      options
    )
  end
end
