# NOTE: This file is auto generated by OpenAPI Generator 6.4.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule ExWorldCheck.Model.ResultAllOf do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :primaryName,
    :events,
    :countryLinks,
    :identityDocuments,
    :category,
    :providerType,
    :gender,
    :entityCreationDate,
    :entityModificationDate,
    :pepStatus,
    :actionTypes
  ]

  @type t :: %__MODULE__{
          :primaryName => String.t() | nil,
          :events => [ExWorldCheck.Model.Event.t()] | nil,
          :countryLinks => [ExWorldCheck.Model.CountryLink.t()] | nil,
          :identityDocuments => [ExWorldCheck.Model.IdentityDocument.t()] | nil,
          :category => String.t() | nil,
          :providerType => String.t() | nil,
          :gender => String.t() | nil,
          :entityCreationDate => DateTime.t() | nil,
          :entityModificationDate => DateTime.t() | nil,
          :pepStatus => String.t() | nil,
          :actionTypes => [String.t()] | nil
        }
end

defimpl Poison.Decoder, for: ExWorldCheck.Model.ResultAllOf do
  import ExWorldCheck.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:events, :list, ExWorldCheck.Model.Event, options)
    |> deserialize(:countryLinks, :list, ExWorldCheck.Model.CountryLink, options)
    |> deserialize(:identityDocuments, :list, ExWorldCheck.Model.IdentityDocument, options)
  end
end
